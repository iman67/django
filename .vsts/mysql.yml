jobs:
- job: MySQL
  timeoutInMinutes: 360
  steps:
    - bash: |
        docker run --name mysql-container -P -e MYSQL_ROOT_PASSWORD=super-secret -e MYSQL_ROOT_HOST=% -d mysql:8.0
      displayName: Spin up container

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
        architecture: 'x64'
      displayName: Use Python version 3.7

    - bash: |
        sudo apt-get -yq update
        sudo apt-get -yq install libmemcached-dev
        # required for mysqlclient
        sudo apt-get -yq install python3-dev libmysqlclient-dev
      displayName: Setup Linux environment

    - script: |
        python -m pip install --upgrade pip setuptools wheel
        pip install unittest-xml-reporting
      displayName: Setup Python environment

    - script: |
        pip install -r requirements/py3.txt
        pip install -r requirements/mysql.txt
        pip install -e ..
      displayName: Install requirements
      workingDirectory: $(Build.SourcesDirectory)/tests
      env:
        PYTHONPATH: $(Build.SourcesDirectory)/.vsts/
    
    - script: |
        export CONTAINER_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' mysql-container)
        echo IP of container is $CONTAINER_IP
        python runtests.py --noinput --settings ci_settings.test_mysql --verbosity 2
      displayName: Run tests
      continueOnError: true
      workingDirectory: $(Build.SourcesDirectory)/tests
      env:
        PYTHONPATH: $(Build.SourcesDirectory)/.vsts/
    
    # Skipped tests generate an invalid startDate. Until it's fixed,
    # delete test results which contain illegal timestamps.
    # https://github.com/xmlrunner/unittest-xml-reporting/issues/168
    - bash: |
        BAD_RESULTS=$(grep -El "0001-01-01" TEST-*.xml)
        if [ -n "$BAD_RESULTS" ]; then
          echo Removing: $BAD_RESULTS
          rm $BAD_RESULTS
        else
          echo No results to remove.
        fi
      displayName: Remove skipped test results
      continueOnError: true
      workingDirectory: $(Build.SourcesDirectory)/tests

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: "**/TEST-*.xml"
        testRunTitle: 'Python 3.7 - MySQL'
      displayName: Publish test results
